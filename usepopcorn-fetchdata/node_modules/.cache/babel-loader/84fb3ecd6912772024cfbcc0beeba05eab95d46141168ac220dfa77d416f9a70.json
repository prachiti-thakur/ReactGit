{"ast":null,"code":"var _jsxFileName = \"/home/prachitit/Documents/ReactGit/usepopcorn-fetchdata/src/index.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport StarRating from './starRating';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Test() {\n  _s();\n  const [movieRating, setMovieRating] = useState(0);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(StarRating, {\n      color: \"blue\",\n      maxRating: 10,\n      onSet: setMovieRating\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"This movie was rated \", movieRating, \" star\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 1\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 1\n  }, this);\n}\n_s(Test, \"+511XgVfs/Y6ekypWdqBqcT8kIY=\");\n_c = Test;\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(/*#__PURE__*/_jsxDEV(React.StrictMode, {\n  children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 23,\n  columnNumber: 3\n}, this));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nvar _c;\n$RefreshReg$(_c, \"Test\");","map":{"version":3,"names":["React","useState","ReactDOM","App","StarRating","jsxDEV","_jsxDEV","Test","_s","movieRating","setMovieRating","children","color","maxRating","onSet","fileName","_jsxFileName","lineNumber","columnNumber","_c","root","createRoot","document","getElementById","render","StrictMode","$RefreshReg$"],"sources":["/home/prachitit/Documents/ReactGit/usepopcorn-fetchdata/src/index.js"],"sourcesContent":["import React, { useState } from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\n\nimport StarRating from './starRating';\n\n\n\nfunction Test(){\n  const [movieRating,setMovieRating]=useState(0)\n  return (\n<div>\n<StarRating color='blue' maxRating={10} onSet={setMovieRating} />\n<p>This movie was rated {movieRating} star</p>\n</div>\n  )\n}\n\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n\n    {/* to avoid to create the new project  */}\n    {/* <StarRating maxRating={5}/>  \n    <StarRating size={24} color=\"red\" className=\"test\"/>  \n    <StarRating maxRating={5} messages={[\"Terrible\",\"Bad\",\"Okay\",\"Good\",\"Amazing\"]}\n    defaultRating={3}\n    />  \n\n    <Test/> */}\n\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,QAAQ,MAAM,kBAAkB;AACvC,OAAO,aAAa;AACpB,OAAOC,GAAG,MAAM,OAAO;AAEvB,OAAOC,UAAU,MAAM,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAItC,SAASC,IAAIA,CAAA,EAAE;EAAAC,EAAA;EACb,MAAM,CAACC,WAAW,EAACC,cAAc,CAAC,GAACT,QAAQ,CAAC,CAAC,CAAC;EAC9C,oBACFK,OAAA;IAAAK,QAAA,gBACAL,OAAA,CAACF,UAAU;MAACQ,KAAK,EAAC,MAAM;MAACC,SAAS,EAAE,EAAG;MAACC,KAAK,EAAEJ;IAAe;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACjEZ,OAAA;MAAAK,QAAA,GAAG,uBAAqB,EAACF,WAAW,EAAC,OAAK;IAAA;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACzC,CAAC;AAEN;AAACV,EAAA,CARQD,IAAI;AAAAY,EAAA,GAAJZ,IAAI;AAWb,MAAMa,IAAI,GAAGlB,QAAQ,CAACmB,UAAU,CAACC,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC,CAAC;AACjEH,IAAI,CAACI,MAAM,cACTlB,OAAA,CAACN,KAAK,CAACyB,UAAU;EAAAd,QAAA,eACfL,OAAA,CAACH,GAAG;IAAAY,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE;AAAC;EAAAH,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OAWS,CACpB,CAAC;;AAED;AACA;AACA;AAAA,IAAAC,EAAA;AAAAO,YAAA,CAAAP,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}